# Housing Crisis

## Install and Load Necessary Packages

```{r}
install.packages("tidyverse")
install.packages("ggrepel")
install.packages("reshape")
install.packages("patchwork")

library(tidyverse)
library(ggrepel)
library(reshape2)
library(patchwork)
library(readxl)
```

## Data Description

### Data Explanation

#### Housing Cost Overburden Rate (`overburden_rate`)

**What the numbers mean**: 

This indicator shows the percentage of the population living in households where
total housing costs (rent, mortgage, utilities, maintenance) represent more than
40% of disposable household income. A value of 25% means that 1 in 4 people
spend over 40% of their income on housing.

**How data is collected**: 
- Data comes from EU-SILC (European Union Statistics on Income and Living Conditions), an annual survey covering private households
- Combines interview data with administrative records from government databases
- Households are followed for 4 years to track changes over time

**Data selection**:
- **Applied filters**: 
  - Year: 2023
  - All other parameters set to totals (no breakdown by age, sex, or poverty status)
- **Why these filters**: Provides overall national picture without demographic subdivisions

**Data transformations**: None - data used as provided by Eurostat

**Important considerations**:
- Different countries may have varying housing market structures (ownership vs. rental)

**Sources**: 
- Dataset: [ilc_lvho07a](https://ec.europa.eu/eurostat/databrowser/view/ilc_lvho07a/default/table?lang=en)
- Metadata: [EU-SILC Methodology](https://ec.europa.eu/eurostat/cache/metadata/en/ilc_sieusilc.htm)


#### One-Person Households 2023 (`one_person_household_2023`)

**Meaning**: 
Number of households consisting of a single adult living alone, expressed in
thousands (000s). A value of 1,5 means there are 15 000 single-person households
in the country.

**How data is collected**:
- Data from the Labour Force Survey (LFS), a large quarterly household survey
- Based on resident population in private households
- Collected through interviews (face-to-face, phone, or online)

**Data selection**:
- **Applied filters**:
  - Year: 2023
  - Household composition: Single adult without children [HHC_22]
  - All other parameters as totals

- **Why these filters**: Isolates specifically one-person households from all household types

**Data transformations**: None - raw count data

**Data range and interpretation**:
- **Interpretation**: Higher numbers indicate more people living alone
- Should be compared to total households for meaningful analysis

**Important considerations**:
- Excludes collective/institutional households
- Cultural factors strongly influence household composition
- Urban areas typically have higher rates of single-person households
- Economic factors (housing costs, income levels) affect household formation

**Sources**:
- Dataset: [lfst_hhnhtych](https://ec.europa.eu/eurostat/databrowser/view/lfst_hhnhtych/default/table?lang=en)
- Metadata: [LFS Household Statistics](https://ec.europa.eu/eurostat/cache/metadata/en/lfst_hh_esms.htm)

---

#### Total Households (`total_households`)

**Meaning**: 
Total number of all households in the country, expressed in thousands (000s).
This includes all household types: single-person, couples, families with
children, etc.

**How data is collected**: Same as one-person households (Labour Force Survey)

**Data selection**:
- **Applied filters**:
  - Year: 2023
  - Household composition: TOTAL (all types)
  - All other parameters as totals

- **Why these filters**: Provides denominator for calculating household composition percentages

**Data transformations**: None - raw count data

**Sources**:
- Dataset: [lfst_hhnhtych](https://ec.europa.eu/eurostat/databrowser/view/lfst_hhnhtych/default/table?lang=en)
- Metadata: [LFS Household Statistics](https://ec.europa.eu/eurostat/cache/metadata/en/lfst_hh_esms.htm)


#### Population Change 2023 (`population_change_2023`)

**Meaning**: 
Net migration rate per 1,000 population, calculated as the difference between
immigration and emigration plus statistical adjustments. A value of +5.0 means
net immigration added 5 people per 1,000 residents.

**How data is collected**:
- Combination of population registers, immigration/emigration records, and census data
- Calculated as: (Total population change - Natural change) / Average population Ã— 1,000
- Includes statistical adjustments for registration delays and estimation errors

**Data selection**:
- **Applied filters**:
  - Indicator: Crude rate of net migration plus statistical adjustment [CNMIGRATRT]
  - Year: 2023

**Data range and interpretation**:
- **Possible values**: Typically -20 to +20 per 1,000
- **Positive values**: More people moving in than out
- **Negative values**: More people leaving than arriving
- **Near zero**: Balanced migration flows

**Important considerations**:
- "Statistical adjustment" accounts for registration delays, unregistered migration, and data inconsistencies
- Quality varies by country depending on registration systems
- Does not distinguish between EU and non-EU migration
- Affected by economic conditions, conflicts, and policy changes

**Sources**:
- Dataset: [tps00019](https://ec.europa.eu/eurostat/databrowser/view/tps00019/default/table?lang=en)
- Metadata: [Demographic Statistics](https://ec.europa.eu/eurostat/cache/metadata/en/demo_gind_esms.htm)


### GDP per Capita (`gdp_per_cap`)

**What the numbers mean**: 
Gross Domestic Product per person expressed in Purchasing Power Standards (PPS),
which eliminates price level differences between countries. A value of 25,000
means each person's share of national economic output equals 25,000 PPS units.

**How data is collected**:
- GDP from national accounts (production, income, and expenditure approaches)
- Population from demographic statistics
- Price surveys across countries to calculate purchasing power adjustments

**Data selection**:
- **Applied filters**:
  - Year: 2023
  - Measure: GDP per capita in PPS
- **Why these filters**: PPS allows meaningful cross-country comparisons

**Data transformations**: 
- GDP divided by total population
- Converted to PPS using Purchasing Power Parities to adjust for price differences

**Data range and interpretation**:
- **Higher values**: Higher material living standards
- **Lower values**: Lower material living standards
- Does not measure inequality or well-being

**Important considerations**:
- PPS is an artificial currency for comparison only
- Reflects volume of goods/services, not welfare or happiness
- Influenced by working hours, employment rates, and productivity
- May not reflect cost of living for specific groups

**Sources**:
- Dataset: [tec00114](https://ec.europa.eu/eurostat/databrowser/view/tec00114/default/table?lang=en)
- Metadata: [Purchasing Power Parities](https://ec.europa.eu/eurostat/cache/metadata/en/prc_ppp_esms.htm)


### Government Expenditure (`gov_expenditure`)

**What the numbers mean**: 
Total government spending broken down by function (health, education, defense,
etc.) according to COFOG classification. Values can be in millions of Euro,
national currency, or as percentage of GDP.

**How data is collected**:
- Administrative data from government accounting systems
- Based on ESA 2010 accounting standards
- Includes all levels of government (central, regional, local, social security)

**Data selection**:
- **Applied filters**: ??? (UNKNOWN - needs clarification from team member)
- **Why these filters**: ??? 

**Data transformations**: ??? (Depends on whether using absolute values or % of GDP)

**Data range and interpretation**:
- **As % of GDP**: Typically 35-55% for EU countries
- **Main categories** (COFOG divisions):
  - General public services (01)
  - Defence (02)
  - Public order and safety (03)
  - Economic affairs (04)
  - Environmental protection (05)
  - Housing and community (06)
  - Health (07)
  - Recreation, culture, religion (08)
  - Education (09)
  - Social protection (10)

**Important considerations**:
- Different institutional arrangements affect comparability (e.g., public vs. private healthcare)
- Some transactions are consolidated to avoid double-counting
- Classification challenges for multi-purpose expenditures
- Time lags in data availability (usually t+12 months)

**Sources**:
- Dataset: [gov_10a_exp](https://ec.europa.eu/eurostat/databrowser/view/gov_10a_exp__custom_17012254/default/table?lang=en)
- Metadata: [Government Expenditure by Function](https://ec.europa.eu/eurostat/cache/metadata/en/gov_10a_exp_esms.htm)


### HICP Average (`hicp_avg`)

**Meaning**: 
The Harmonised Index of Consumer Prices measures inflation by tracking price
changes of goods and services purchased by households. An index of 110 means
prices are 10% higher than the base year (2015=100).

**How data is collected**:
- Monthly price collection from shops, service providers, and online
- Covers all household consumption: food, housing, transport, recreation, etc.
- Weighted by household expenditure patterns

**Data selection**:
- **Applied filters**: 
  - COICOP category: ???? (UNKNOWN - needs clarification)
  - Time period: Monthly data for specified year
- **Why these filters**: ????

**Data transformations**: 
- Average of 12 monthly index values
- Why: Annual average smooths seasonal variations and provides yearly inflation picture

**Data range and interpretation**:
- **Possible values**: Index typically 80-150 (2015=100)
- **Year-on-year change** = inflation rate
- **Rising values**: Prices increasing (inflation)
- **Falling values**: Prices decreasing (deflation)
- 2-3% annual increase considered price stability

**Important considerations**:
- Quality adjustments made for product improvements
- Basket of goods updated annually to reflect consumption patterns

**Sources**:
- Dataset: [prc_hicp_midx](https://ec.europa.eu/eurostat/databrowser/view/prc_hicp_midx/default/table?lang=en)
- Metadata: [HICP Methodology](https://ec.europa.eu/eurostat/cache/metadata/en/prc_hicp_esms.htm)


```{r}
install.packages("eurostat")
library(eurostat)
library(lubridate)

gov_10a_exp = eurostat::get_eurostat("gov_10a_exp")
gov_10a_exp |>
  mutate(year = lubridate::year(TIME_PERIOD)) |>
  filter(
    geo == "BE",
    year == 2023,
    values == 0.2,
    startsWith(cofog99, "GF06")
  ) |> print(n=100)
```

```{r}
total_households <- read_xlsx("data/processed/total_households.xlsx")
total_households
```
  
```{r}
df <- read_csv("data/processed/2023.csv", show_col_types = FALSE) |>
  select(
    country,
    overburden_rate = overburden_rate_2023,
    one_person_households = one_person_household_2023,
    net_migration = population_change_2023,
    gdp_log = log_gdp,
    gov_expenditure = gov_expenditure,
    hicp_avg = hicp_avg
  ) |>
  mutate(
    gdp = exp(gdp_log),
  ) |>
  full_join(total_household, by="country")


df
```


```{r}
df
```


### Data Distributions

```{r}
ggplot(df, aes(x = population_change_2023)) +
  geom_histogram(aes(y = after_stat(density)),
    colour = 1, fill = "white"
  ) +
  geom_density()
```

```{r}
ggplot(df, aes(x = household_adjusted)) +
  geom_histogram(aes(y = after_stat(density)),
    colour = 1, fill = "white"
  ) +
  geom_density()
```

```{r}
ggplot(df, aes(x = log_gdp)) +
  geom_histogram(aes(y = after_stat(density)),
    colour = 1, fill = "white"
  ) +
  geom_density()
```


## Modeling data

### Model 1

```{r}
cor(df$overburden_rate_2023, df$household_adjusted)
cor(df$overburden_rate_2023, df$population_change_2023)
```


```{r}
df |>
  ggplot(aes(x = household_adjusted, y = population_change_2023, label = country)) +
  geom_point() +
  geom_rug()
```

```{r}
cor(df$population_change_2023, df$household_adjusted)
```

```{r}
df |>
  select(- country) |>
  cor(use = "pairwise.complete.obs")
```


```{r}
model1 <- lm(
  overburden_rate_2023 ~
    household_adjusted +
    population_change_2023,
  data = df)
)

summary(model1)
```



```{r}
coef(model1)
```


```{r, fig.dim=(10, 20)}
df |>
  ggplot(aes(x = household_adjusted, y = overburden_rate_2023)) +
  geom_point() +
  geom_abline(
    intercept = coef(model1)[["(Intercept)"]],
    slope     = coef(model1)[["household_adjusted"]],
    color     = "steelblue",
  ) +
  geom_text_repel(aes(label = country), size = 3)

```
```{r}
df |>
  ggplot(aes(x = population_change_2023, y = overburden_rate_2023)) +
  geom_point() +
  geom_abline(
    intercept = coef(model1)[["(Intercept)"]],
    slope     = coef(model1)[["population_change_2023"]],
    color     = "steelblue",
  ) +
  geom_text_repel(aes(label = country), size = 3)
```


```{r, fig.dim=(10, 20)}
p1 = df_adjusted |>
  ggplot(aes(x = household_adjusted, y = overburden_rate_2023)) +
  geom_point() +
  geom_abline(
    intercept = coef(model1_adjusted)[["(Intercept)"]],
    slope     = coef(model1)[["household_adjusted"]],
    color     = "steelblue",
  ) +
  geom_text_repel(aes(label = country), size = 3)

p2 = df_adjusted |>
  ggplot(aes(x = population_change_2023, y = overburden_rate_2023)) +
  geom_point() +
  geom_abline(
    intercept = coef(model1_adjusted)[["(Intercept)"]],
    slope     = coef(model1)[["population_change_2023"]],
    color     = "steelblue",
  ) +
  geom_text_repel(aes(label = country), size = 3)

p1 / p2
```

```{r}

```

```{r}
df |>
  ggplot(aes(x = population_change_2023, y = overburden_rate_2023)) +
  geom_point() +
  geom_smooth(method = "lm") +
  geom_text_repel(aes(label = country), size = 3)
```

```{r}
model1 <- lm(
  overburden_rate_2023 ~ population_change_2023,
  data = df
)

summary(model1)
```

#model 2 = predicting housing crisis using government expenditure on housing and gini coefficient (income inequality), controllig for log_gdp
cor(df$overburden_rate_2023, gov_exp$gov_expenditure_housing_2023)
cor(df$overburden_rate_2023, df$income_inequality)
model2 <- lm(df$overburden_rate_2023 ~ df$gov_expenditure + df$income_inequality + df$log_gdp)
summary(model2)

df %>%
  ggplot(aes(x = income_inequality, y = overburden_rate_2023)) +
  geom_point(aes(color = df$gov_expenditure), size = 3) +
  scale_color_viridis_c() +
  geom_smooth(method = "lm", se = FALSE, color = "gray") +
  labs(
    x = "Income Inequality (Gini)",
    y = "Housing Cost Overburden Rate",
    color = "Gov. Exp. on Housing",
    title = "Overburden vs. Inequality & Government Spending"
  ) +
  theme_minimal() +
  geom_text_repel(aes(label = country), size = 3)

#model 3 = predicting housing crisis using gdp and housing inflation
  #calculating avarege hicp for each country for year 2023
hicp_avg <- prc_hicp_midx %>%
  rowwise() %>%
  mutate(mean_housing_inflation_2023 = mean(c_across(Jan:Dec), na.rm = TRUE)) %>%
  ungroup()

  #model 3 = predicting housing crisis with gdp and inflation
cor(df$overburden_rate_2023, hicp_avg$mean_housing_inflation_2023)
cor(df$overburden_rate_2023, df3$log_gdp)
model3 <- lm(df$overburden_rate_2023 ~ hicp_avg$mean_housing_inflation_2023 + df3$log_gdp)
summary(model3)

df3 %>% 
  ggplot(aes(x = mean_housing_inflation_2023, y = overburden_rate_2023)) +
  geom_point() +
  geom_smooth(method = "lm") +
  geom_text_repel(aes(label = country), size = 3)

df3 %>% 
  ggplot(aes(x = log_gdp, y = overburden_rate_2023)) +
  geom_point() +
  geom_smooth(method = "lm") +
  geom_text_repel(aes(label = country), size = 3)

ggplot(df3, aes(x = mean_housing_inflation_2023, y = overburden_rate_2023)) +
  geom_point(aes(color = log_gdp), size = 3) +
  geom_smooth(method = "lm", se = FALSE, color = "gray") +
  scale_color_viridis_c() +
  geom_text_repel(aes(label = country)) +
  labs(
    x = "Avg. Housing Inflation (2023)",
    y = "Housing Cost Overburden Rate",
    color = "log(GDP per capita)",
    title = "Overburden Rate vs. Inflation, Colored by GDP"
  ) +
  theme_minimal()
